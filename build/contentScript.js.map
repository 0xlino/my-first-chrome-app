{"version":3,"file":"contentScript.js","mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,wCAAwC,eAAe;AACvD;;AAEA;AACA;;AAEA,2CAA2C,eAAe;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B;;AAEA;;;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,CAAC","sources":["webpack://bens-app/./src/contentScript.js"],"sourcesContent":["'use strict';\n\n// Content script file will run in the context of web page.\n// With content script you can manipulate the web pages using\n// Document Object Model (DOM).\n// You can also pass information to the parent extension.\n\n// We execute this script by making an entry in manifest.json file\n// under `content_scripts` property\n\n// For more information on Content Scripts,\n// See https://developer.chrome.com/extensions/content_scripts\n\n// get clipboard data\nlet clipTextString = '';\nnavigator.clipboard.readText().then((clipText) => {\n  // // console.log(clipText);\n  clipTextString = clipText;\n\n  var radioButton = document.getElementById(':r7:');\n  radioButton.click();\n  radioButton.checked = true;\n\n  var inputElement = document.getElementById(':r1:');\n\n  // Set the value of the input field\n  inputElement.value = clipTextString;\n\n  // https://github.com/WTNO/Evm_Js_Learning\n  const repoNameString = clipTextString.split(\"/\").pop();\n\n  var inputEvent = new Event('input', { bubbles: true });\n  inputElement.dispatchEvent(inputEvent);\n\n  var reponame = document.getElementById(':r4:');\n  reponame.value = repoNameString;\n\n  var repoNameEvent = new Event('input', { bubbles: true });\n  reponame.dispatchEvent(repoNameEvent);\n\n  // press submit\n  // var submitButton = document.querySelector('button[type=\"submit\"]');\n  // submitButton.click();\n\n  // console.log(\"clicked submit\");\n  // console.log(submitButton);\n  var importButton = document.querySelector('.types__StyledButton-sc-ws60qy-0.jdYaZE');\n  console.log(importButton);\n  // Click the button\n  importButton.click();\n})\n\n// Log `title` of current active web page\nconst pageTitle = document.head.getElementsByTagName('title')[0].innerHTML;\nconsole.log(\n  `Page title is: '${pageTitle}' - evaluated by Chrome extension's 'contentScript.js' file`\n);\n\n// put focus on the :r1:\n\n\n// Set the radio button as checked\n\n\n\n\n// Communicate with background file by sending a message\n// chrome.runtime.sendMessage(\n//   {\n//     type: 'GREETINGS',\n//     payload: {\n//       message: 'Hello, my name is Con. I am from ContentScript.',\n//     },\n//   },\n//   (response) => {\n//     console.log(response.message);\n//   }\n// );\n\n// Listen for message\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  console.log(\"logging from content script\");\n  if (request.type === 'GREETINGS') {\n    var inputElement = document.getElementById(':r1:');\n\n    // Set the value of the input field\n    inputElement.value = 'https://your-desired-repository-url.com';\n  }\n  if (request.type === 'COUNT') {\n    console.log(`Current count is ${request.payload.count}`);\n  }\n\n  // Send an empty response\n  // See https://github.com/mozilla/webextension-polyfill/issues/130#issuecomment-531531890\n  sendResponse({});\n  return true;\n});\n"],"names":[],"sourceRoot":""}